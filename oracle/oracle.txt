1.
DQL（数据查询语言）：select
DML（数据操纵语言）：insert，update，delete
	insert into table_name(...) values(...);
	insert into table_name select ...;
	update table_name set ... where ...;
	delete from table_name where ...;(可以rollback)
	truncate table table_name;(不可以rollback)
TCL（事务控制语言）：commit,rollback,savepoint
	savepoint sp;    rollback to savepoint sp;    commit;
DDL（数据定义语言）：create table, alter table
	create table table_name1 as select ... from table_name2 where ...;
	create table table_name (column_name datatype, ...);
	alter table table_name add column_name datatype;
	alter table table_name modify column_name  datatype;
	alter table table_name drop column column_name; (如果要在一条语句中删除多个列，则需要将删除的字段名放在括号中，多个字段之间用逗号隔开，这时不能使用关键字column)
	alter table table_name rename column old_column_name to new_column_name;
	rename old_table_name to new_table_name;
	alter table old_table_name rename to new_table_name;
	drop table table_name [cascade constraints]; (使用参数时，不仅仅删除该表，而且所有引用这个表的视图、约束或触发器等也都被删除)
DCL（数据控制语言）：grant,revoke
	grant obj_privi on schema.object to user;
	revoke obj_privi on schema.object from user cascade constraints;

2.
	SQL*PLUS set命令
	heading [on/off] :列标题
	linesize  n  ：一行中显示的最多字符总数
	pagesize n  ：设置从顶部标题至页结束之间的行数     set pagesize 0 （不进行分页显示）

3.
help index    ：查看SQL*PLUS命令清单
#desc object_name   :在SQL*PLUS敲命令中间执行后可查看表结构，不用重新敲之前的命令(需换行)
start和@   ：执行SQL脚本文件
rowid   ：行标识符，数据库的隐藏列，代表该行数据在oracle数据库中的物理地址

4.
having子句对group by子句选择出来的结果进行再次筛选，最后输出符合having子句中条件的记录

5.
多表关联查询：
表别名:
内连接(INNER JOIN):
	select columns_list from table_name1 [inner] join table_name2 on join_condition;
外连接(OUTER JOIN):
	左外连接(left join):左边的表不加限制
		select columes_list from table_name1 left join table_name2 on join_condition;
	右外连接(right join):右边的表不加限制
		select columes_list from table_name1 right join table_name2 on join_condition;
	完全外连接(full join):
		select columes_list from table_name1 full join table_name2 on join_condition;
	对于外连接，也可以使用(+)来表示。(+)操作符只能用于实现左外连接和右外连接，不能用于实现完全外连接;当使用(+)操作符时，如果在where子句中包含有多个条件，则必须在所有条件中都包含(+)操作符。
	完全外连接会执行一个完整的左外连接和右外连接查询，然后将查询结果合并，并消除重复的记录行。
自然连接(NATURAL JOIN):
	select columns_list form table_name1 natural join table_name2 where join_condition;
	在使用自然连接时，不能为列指定限定词。
交叉连接(CROSS JOIIN):
	select columns_list form table_name1 cross join table_name2;  结果是笛卡儿积，可以通过where过滤。

6.
多表关联查询的查询效率要高于子查询。
(一般情况下，外查询语句检索一行，子查询语句需要检索一遍数据，然后判断外查询语句的条件是否满足。)
子查询:
子查询必须用()括起来；子查询中不能包含order by子句.
单行子查询:(=、>、<、>=、<=、<>)
	单行子查询的返回结果必须是一行数据。
多行子查询:(in、any、all)

7.
约束的类型包括非空约束、主键约束、唯一约束、外键约束、检查约束和默认约束。
约束的存在会降低插入和更改数据的效率，系统必须确认这些数据是否满足定义的约束条件。
非空约束：not null
主键约束：一个表中最多只能有一个主键约束，主键约束既可以由一列组成，也可以由两个或两个以上的列组成。
				alter table table_name add [constraint pk_name] primary key(...);
				alter table table_name drop constraint pk_name;
唯一性约束：唯一约束的列有值时不允许重复，但可以为空值。
				alter table table_name add constraint uk_name unique(...);
				alter table table_name drop constraint uk_name;
外键约束：
				alter table table_name add constraint fk_name foreign key(...) references departments(...);
				alter table table_name drop constraint fk_name;

8.
将索引和对应的表分别放在不同硬盘的不同的表空间中能够提高查询的速度，因为oracle能够并行读取不同硬盘的数据，这样可以避免产生I/O冲突。

9.
视图：
视图是一个虚拟表，它由存储的查询构成，可以将它的输出看做一个表。视图并不在数据库中存储数据值，数据库只在数据字典中存储视图的定义信息。
通过视图修改数据时，实际上就是在修改基本表中的数据。与之相对应，改变基本表中的数据也会反映到由该表组成的视图中。
创建视图：
	create [ or replace ] view < view_name > [(alias [, alias ] .. .) ] 
	as < subquery > 
	[ with check option ] [ constraint constraint_name ] 
	[ with read only ];
查看视图定义：
	select * from user_views;
删除视图：
	drop view < view_name >;

10.
表分区：
范围分区（range）：
	partition by range(acc_date)
	(
	    partition partition_name values less than(...) tablespace tablespace_name,
		...
	);
散列分区（hash）:
	partition by hash(acc)
	(
  	 	partition partition_name tablespace tablespace_name,
	    ...
	);
列表分区（list）：
	partition by list(province)
	(
		partition partition_name values(...),
	    ...
	);
组合分区:
	范围-范围、列表-范围、范围-散列、范围-列表、列表-列表、列表-散列
添加表分区（add）:
	添加的分区界限应该高于最后一个分区界限.
	alter table table_name add partition partition_name values less than(...);
	alter table table_name modify partition partition_name add subpartition subpartition_name values(...);
合并表分区（coalesce）:
	用于合并散列分区和复合分区的散列子分区.
	alter table table_name coalesce partition;
	alter table table_name modify partition partition_name coalesce subpartition;
删除表分区（drop）:
	可以从范围分区或复合分区中删除分区。但是散列分区和复合分区的散列子分区，只能通过合并来达到删除的目的。
	alter table table_name drop partition partition_name;
	alter table table_name drop subpartition subpartition_name;
截断表分区（truncate）:
	删除分区中数据，不删除分区.
	alter table table_name truncate partition partition_name;
	alter table table_name truncate subpartition subpartition_name;
并入表分区（merge）:
	将相邻的分区合并成一个分区.
	alter table table_name merge partitions part1,part2 into partition part2;
拆分表分区（split）:
	将一个分区拆分成两个新分区，拆分后原来分区不再存在，不能对hash分区进行拆分.
	alter table table_name split partition part1 at (...) into (partition part11,partition part12);
重命名表分区（rename）：
	alter table table_name rename partition part1 to part2;
